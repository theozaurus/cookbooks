%%%
%%%     Debian ejabberd configuration file
%%%     This config must be in UTF-8 encoding
%%%
%%% The parameters used in this configuration file are explained in more detail
%%% in the ejabberd Installation and Operation Guide.
%%% Please consult the Guide in case of doubts, it is available at
%%% /usr/share/doc/ejabberd/guide.html

%%%   =========
%%%   DEBUGGING

%%
%% loglevel: Verbosity of log files generated by ejabberd.
%% 0: No ejabberd log at all (not recommended)
%% 1: Critical
%% 2: Error
%% 3: Warning
%% 4: Info
%% 5: Debug
%%
{loglevel, 5}.

%%%   ================
%%%   SERVED HOSTNAMES

{hosts, <%= @ejabberd[:hosts].inspect %>}.

%%%   ===============
%%%   LISTENING PORTS

%%
%% listen: Which ports will ejabberd listen, which service handles it
%% and what options to start it with.
%%
{listen,
 [
  {5222, ejabberd_c2s, [
			{access, c2s},
			{shaper, c2s_shaper},
			{max_stanza_size, 65536}
		       ]}
<% if @ejabberd[:modules].include? "http_bind" -%>
  ,{<%= @ejabberd[:http_bind][:port] %>, ejabberd_http, [
       <% if @ejabberd[:http_bind][:tls] %>
       tls, {certfile, "/etc/ejabberd/ejabberd.pem"},
       <% end %>
			 http_bind,
			 http_poll,
			 web_admin
			]}
<% end -%>
<% @ejabberd[:services].each do |s| -%>
  ,{<%= s[:port] %>, ejabberd_service, [
                             { hosts, <%= s[:hosts][:jids].inspect %>, [{password, "<%= s[:hosts][:password] %>" }] },
                             { service_check_from, <%= s[:service_check_from] %> }
                            ]}
<% end -%>
 ]}.

%%
%% s2s_use_starttls: Enable STARTTLS + Dialback for S2S connections.
%% Allowed values are: true or false.
%% You must specify a certificate file.
%%
%%{s2s_use_starttls, true}.

%%
%% s2s_certfile: Specify a certificate file.
%%
%%{s2s_certfile, "/etc/ejabberd/ejabberd.pem"}.

%%%   ==============
%%%   AUTHENTICATION

<% if @ejabberd[:auth_method][:external] -%>
{auth_method, external}.
{extauth_program, "<%= @ejabberd[:auth_method][:external] %>"}.
<% elsif @ejabberd[:auth_method][:ldap] -%>
{auth_method, ldap}. 
{ldap_servers,         <%= @ejabberd[:auth_method][:ldap][:servers].inspect %> }.
{ldap_port,            <%= @ejabberd[:auth_method][:ldap][:port] %> }.
{ldap_base,            "<%= @ejabberd[:auth_method][:ldap][:base] %>" }.
{ldap_rootdn,          "<%= @ejabberd[:auth_method][:ldap][:rootdn] %>" }.
{ldap_password,        "<%= @ejabberd[:auth_method][:ldap][:password] %>" }.
{ldap_uids,            [<%= @ejabberd[:auth_method][:ldap][:uids] %>] }.
<% if @ejabberd[:auth_method][:ldap][:filter] -%>
{ldap_filter,          "<%= @ejabberd[:auth_method][:ldap][:filter] %>" }.
<% else -%>
{ldap_filter,          undefined }.
<% end -%>
<% if @ejabberd[:auth_method][:ldap][:local_filter] -%>
{ldap_local_filter,    "<%= @ejabberd[:auth_method][:ldap][:local_filter] %>" }.
<% else -%>
{ldap_local_filter,    undefined }.
<% end -%>
<% else -%>
{auth_method, internal}.
<% end -%>

%%%   ==============
%%%   DATABASE SETUP

<% if @ejabberd[:modules].include? "odbc" -%>
{odbc_server, {mysql, "<%= @ejabberd[:odbc][:mysql][:host] %>",
                      "<%= @ejabberd[:odbc][:mysql][:database] %>",
                      "<%= @ejabberd[:odbc][:mysql][:username] %>",
                      "<%= @ejabberd[:odbc][:mysql][:password] %>"}}.
{odbc_keepalive_interval, 3600}.
<% end -%>

%%%   ===============
%%%   TRAFFIC SHAPERS

%%
%% The "fast" shaper limits traffic speed to 50.000 B/s
%%
{shaper, fast, {maxrate, 50000}}.

%%%   ====================
%%%   ACCESS CONTROL LISTS

%%
%% The 'admin' ACL grants administrative privileges to Jabber accounts.
%% You can put as many accounts as you want.
%%
<% @ejabberd[:admins].each do |admin| -%>
{acl, admin, {user, "<%= admin[:user] %>", "<%= admin[:host] %>"}}.
<% end -%>

%%
%% Local users: don't modify this line.
%%
{acl, local, {user_regexp, ""}}.

%%%   ============
%%%   ACCESS RULES

%% Define the maximum number of time a single user is allowed to connect:
{access, max_user_sessions, [{10, all}]}.

%% This rule allows access only for local users:
{access, local, [{allow, local}]}.

%% Only non-blocked users can use c2s connections:
{access, c2s, [{deny, blocked},
	       {allow, all}]}.

%% For all users except admins used "normal" shaper
{access, c2s_shaper, [{none, admin},
		      {normal, all}]}.

%% For all S2S connections used "fast" shaper
{access, s2s_shaper, [{fast, all}]}.

%% Only admins can send announcement messages:
{access, announce, [{allow, admin}]}.

%% Only admins can use configuration interface:
{access, configure, [{allow, admin}]}.

%% No username can be registered via in-band registration:
%% To enable in-band registration, replace 'deny' with 'allow'
% (note that if you remove mod_register from modules list then users will not
% be able to change their password as well as register).
% This setting is default because it's more safe.
{access, register, [{deny, all}]}.

%% Everybody can create pubsub nodes
{access, pubsub_createnode, [{allow, all}]}.

{language, "en"}.

%%%   =======
%%%   MODULES

{modules,
 [
  {mod_adhoc,    []},
  {mod_announce, [{access, announce}]}, % requires mod_adhoc
  {mod_configure,[]}, % requires mod_adhoc
  {mod_caps,     []},
  {mod_pubsub,   [
                  {access_createnode, pubsub_createnode},
                  {ignore_pep_from_offline, true},
                  {last_item_cache, false},
                  {plugins, <%= @ejabberd[:pubsub].inspect %>}  % pep requires mod_caps
                 ]},
  {mod_disco,    []},
  {mod_service_log,[]},
  {mod_stats,    []},
  {mod_time,     []},
  {mod_shared_roster, []},
  {mod_last,     []},
  {mod_privacy,  []},
  {mod_private,  []},
  {mod_roster,   []},
<% if @ejabberd[:auth_method][:ldap] -%>
  {mod_vcard_ldap, []},
<% else %>
  {mod_vcard,    []},
<% end -%>
<% if @ejabberd[:modules].include? "http_bind" -%>
  {mod_http_bind,[]},
<% end -%>
<% if @ejabberd[:modules].include? "mod_ctlextra" -%>
  {mod_ctlextra, []},
<% end -%>
<% if @ejabberd[:modules].include? "mod_rabbitmq" -%>
  {mod_rabbitmq, []},
<% end -%>
<% if @ejabberd[:modules].include? "mod_archive_odbc" -%>
  {mod_archive_odbc, [{database_type, "mysql"},
                      {default_auto_save, true},
                      {enforce_default_auto_save, true},
                      {default_expire, infinity},
                      {enforce_min_expire, 0},
                      {enforce_max_expire, infinity},
                      {replication_expire, 31536000},
                      {session_duration, 1800},
                      {wipeout_interval, 86400}]},
<% end -%>
  {mod_version,  []}
]}.
